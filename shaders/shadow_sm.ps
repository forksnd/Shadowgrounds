//#define ENABLE_SHADOW 1

struct PS_IN
{
    float4 pos       : POSITION;
    float4 diffuse   : COLOR0;
    float4 uv0       : TEXCOORD0;
    float4 uv1       : TEXCOORD1;
    float2 uv2       : TEXCOORD2;
    float  uv3       : TEXCOORD3;
};

sampler samProjTexture   : register(s0);
sampler samShadowTexture : register(s1);
sampler samBaseTexture   : register(s2);
sampler samFadeTexture   : register(s3);

float4 main(PS_IN ps_in): COLOR
{
    float4 color = 1;

    //tex t0 ; Projected texture
    //tex t1 ; Shadow texture
    //tex t2 ; Base texture
    //tex t3 ; Fade texture
    float4 projectedColor = tex2Dproj(samProjTexture, ps_in.uv0);
    float4 baseColor = tex2D(samBaseTexture, ps_in.uv2);
    float3 fade = tex1D(samFadeTexture, ps_in.uv3).rgb;

    //mul r0, t2, v0
    //mul r0, r0, t1
    //mul r0.rgb, r0, t0
    //+ mul r0.a, t0.a, t2.a
    //mul r0.rgb, r0, t3
    //+ mul r0.a, r0.a, v0.a
    color = ps_in.diffuse * baseColor * projectedColor;
    color.rgb *= fade;
#if ENABLE_SHADOW
    float  occluderDepth = tex2Dproj(samShadowTexture, ps_in.uv1).x;
    float  sampleDepth = ps_in.uv1.z / ps_in.uv1.w;
    color.rgb *= (sampleDepth < occluderDepth) ? 1.0f : 0.0f;
#endif

    return color;
}
