# Microsoft Developer Studio Project File - Name="particle_editor" - Package Owner=<4>
# Microsoft Developer Studio Generated Build File, Format Version 6.00
# ** DO NOT EDIT **

# TARGTYPE "Win32 (x86) Application" 0x0101

CFG=particle_editor - Win32 Debug
!MESSAGE This is not a valid makefile. To build this project using NMAKE,
!MESSAGE use the Export Makefile command and run
!MESSAGE 
!MESSAGE NMAKE /f "particle_editor.mak".
!MESSAGE 
!MESSAGE You can specify a configuration when running NMAKE
!MESSAGE by defining the macro CFG on the command line. For example:
!MESSAGE 
!MESSAGE NMAKE /f "particle_editor.mak" CFG="particle_editor - Win32 Debug"
!MESSAGE 
!MESSAGE Possible choices for configuration are:
!MESSAGE 
!MESSAGE "particle_editor - Win32 Release" (based on "Win32 (x86) Application")
!MESSAGE "particle_editor - Win32 Debug" (based on "Win32 (x86) Application")
!MESSAGE 

# Begin Project
# PROP AllowPerConfigDependencies 0
# PROP Scc_ProjName ""
# PROP Scc_LocalPath ""
CPP=cl.exe
MTL=midl.exe
RSC=rc.exe

!IF  "$(CFG)" == "particle_editor - Win32 Release"

# PROP BASE Use_MFC 0
# PROP BASE Use_Debug_Libraries 0
# PROP BASE Output_Dir "Release"
# PROP BASE Intermediate_Dir "Release"
# PROP BASE Target_Dir ""
# PROP Use_MFC 0
# PROP Use_Debug_Libraries 0
# PROP Output_Dir "Release"
# PROP Intermediate_Dir "Release"
# PROP Ignore_Export_Lib 0
# PROP Target_Dir ""
# ADD BASE CPP /nologo /W3 /GX /O2 /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /D "_MBCS" /YX /FD /c
# ADD CPP /nologo /W3 /GX /O2 /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /D "_MBCS" /FD /c
# SUBTRACT CPP /YX
# ADD BASE MTL /nologo /D "NDEBUG" /mktyplib203 /win32
# ADD MTL /nologo /D "NDEBUG" /mktyplib203 /win32
# ADD BASE RSC /l 0x409 /d "NDEBUG"
# ADD RSC /l 0x409 /d "NDEBUG"
BSC32=bscmake.exe
# ADD BASE BSC32 /nologo
# ADD BSC32 /nologo
LINK32=link.exe
# ADD BASE LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /subsystem:windows /machine:I386
# ADD LINK32 winmm.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /subsystem:windows /machine:I386

!ELSEIF  "$(CFG)" == "particle_editor - Win32 Debug"

# PROP BASE Use_MFC 0
# PROP BASE Use_Debug_Libraries 1
# PROP BASE Output_Dir "Debug"
# PROP BASE Intermediate_Dir "Debug"
# PROP BASE Target_Dir ""
# PROP Use_MFC 0
# PROP Use_Debug_Libraries 1
# PROP Output_Dir "Debug"
# PROP Intermediate_Dir "Debug"
# PROP Ignore_Export_Lib 0
# PROP Target_Dir ""
# ADD BASE CPP /nologo /W3 /Gm /GX /ZI /Od /D "WIN32" /D "_DEBUG" /D "_WINDOWS" /D "_MBCS" /YX /FD /GZ /c
# ADD CPP /nologo /W3 /GX /ZI /Od /I "../storm/include" /D "WIN32" /D "_DEBUG" /D "_WINDOWS" /D "_MBCS" /GZ /c
# ADD BASE MTL /nologo /D "_DEBUG" /mktyplib203 /win32
# ADD MTL /nologo /D "_DEBUG" /mktyplib203 /win32
# ADD BASE RSC /l 0x409 /d "_DEBUG"
# ADD RSC /l 0x409 /d "_DEBUG"
BSC32=bscmake.exe
# ADD BASE BSC32 /nologo
# ADD BSC32 /nologo
LINK32=link.exe
# ADD BASE LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /subsystem:windows /debug /machine:I386 /pdbtype:sept
# ADD LINK32 winmm.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /subsystem:windows /debug /machine:I386 /pdbtype:sept /libpath:"../storm/lib"

!ENDIF 

# Begin Target

# Name "particle_editor - Win32 Release"
# Name "particle_editor - Win32 Debug"
# Begin Group "Source Files"

# PROP Default_Filter "cpp;c;cxx;rc;def;r;odl;idl;hpj;bat"
# Begin Source File

SOURCE=.\cloudparticlesystem.cpp
DEP_CPP_CLOUD=\
	"..\editor\parser.h"\
	"..\editor\string_conversions.h"\
	"..\storm\include\c2_color.h"\
	"..\storm\include\c2_common.h"\
	"..\storm\include\c2_matrix.h"\
	"..\storm\include\c2_plane.h"\
	"..\storm\include\c2_ptrlist.h"\
	"..\storm\include\c2_quat.h"\
	"..\storm\include\c2_rect.h"\
	"..\storm\include\c2_sptr.h"\
	"..\storm\include\c2_sptrlist.h"\
	"..\storm\include\c2_string.h"\
	"..\storm\include\c2_ui.h"\
	"..\storm\include\c2_vectors.h"\
	"..\storm\include\DatatypeDef.h"\
	"..\storm\include\IStorm3D.h"\
	"..\storm\include\IStorm3D_Font.h"\
	"..\storm\include\IStorm3D_Helper.h"\
	"..\storm\include\IStorm3D_Light.h"\
	"..\storm\include\IStorm3D_Line.h"\
	"..\storm\include\IStorm3D_Material.h"\
	"..\storm\include\IStorm3D_Mesh.h"\
	"..\storm\include\IStorm3D_Model.h"\
	"..\storm\include\IStorm3D_Particle.h"\
	"..\storm\include\IStorm3D_Scene.h"\
	"..\storm\include\IStorm3D_Terrain.h"\
	"..\storm\include\IStorm3D_Texture.h"\
	"..\storm\include\Storm3D_Common.h"\
	"..\storm\include\Storm3D_Datatypes.h"\
	"..\storm\include\Storm3D_ObstacleMapDefs.h"\
	"..\storm\include\storm3d_ui.h"\
	".\cloudparticlesystem.h"\
	".\paramblock.h"\
	".\parseutil.h"\
	".\particleeffect.h"\
	".\particlesystem.h"\
	".\particlesystemmanager.h"\
	".\track.h"\
	{$(INCLUDE)}"boost\assert.hpp"\
	{$(INCLUDE)}"boost\checked_delete.hpp"\
	{$(INCLUDE)}"boost\config.hpp"\
	{$(INCLUDE)}"boost\config\posix_features.hpp"\
	{$(INCLUDE)}"boost\config\select_compiler_config.hpp"\
	{$(INCLUDE)}"boost\config\select_platform_config.hpp"\
	{$(INCLUDE)}"boost\config\select_stdlib_config.hpp"\
	{$(INCLUDE)}"boost\config\suffix.hpp"\
	{$(INCLUDE)}"boost\current_function.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_linux.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lightweight_mutex.hpp"\
	{$(INCLUDE)}"boost\detail\limits.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_irix.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_linux.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_nop.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32_cs.hpp"\
	{$(INCLUDE)}"boost\detail\quick_allocator.hpp"\
	{$(INCLUDE)}"boost\detail\shared_count.hpp"\
	{$(INCLUDE)}"boost\detail\shared_ptr_nmt.hpp"\
	{$(INCLUDE)}"boost\detail\workaround.hpp"\
	{$(INCLUDE)}"boost\lexical_cast.hpp"\
	{$(INCLUDE)}"boost\limits.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\algorithm_namespace.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\dtp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\eti.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\lambda.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\msvc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\nttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\overload_resolution.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\preprocessor.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\static_constant.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\ice_cast.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\integral_wrapper.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_arity_param.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_support.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\def_params_tail.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\filter_params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\sub.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\tuple.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\template_arity_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\value_wknd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\void_spec.hpp"\
	{$(INCLUDE)}"boost\mpl\bool.hpp"\
	{$(INCLUDE)}"boost\mpl\bool_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\if.hpp"\
	{$(INCLUDE)}"boost\mpl\int.hpp"\
	{$(INCLUDE)}"boost\mpl\int_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\lambda_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\limits\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\void.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\add.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\sub.hpp"\
	{$(INCLUDE)}"boost\preprocessor\cat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\comma_if.hpp"\
	{$(INCLUDE)}"boost\preprocessor\config\config.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\edg\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\msvc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\iif.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\debug\error.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\check.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\is_binary.hpp"\
	{$(INCLUDE)}"boost\preprocessor\empty.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum_params.hpp"\
	{$(INCLUDE)}"boost\preprocessor\identity.hpp"\
	{$(INCLUDE)}"boost\preprocessor\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\iterate.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\adt.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\for_each_i.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\reverse.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\and.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bitand.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bool.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\compl.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repeat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\edg\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\msvc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\eat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\elem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\rem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\to_list.hpp"\
	{$(INCLUDE)}"boost\scoped_ptr.hpp"\
	{$(INCLUDE)}"boost\shared_ptr.hpp"\
	{$(INCLUDE)}"boost\static_assert.hpp"\
	{$(INCLUDE)}"boost\throw_exception.hpp"\
	{$(INCLUDE)}"boost\type_traits\add_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\alignment_of.hpp"\
	{$(INCLUDE)}"boost\type_traits\broken_compiler_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\config.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\cv_traits_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\false_result.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_and.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_eq.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_not.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_or.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_helper.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_type_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\template_arity_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\wrap.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\yes_no_type.hpp"\
	{$(INCLUDE)}"boost\type_traits\ice.hpp"\
	{$(INCLUDE)}"boost\type_traits\intrinsics.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_arithmetic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_array.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_class.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_convertible.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_enum.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_float.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_function.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_integral.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_function_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pod.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_same.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_scalar.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_union.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_void.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\type_with_alignment.hpp"\
	{$(INCLUDE)}"config\_epilog.h"\
	{$(INCLUDE)}"config\_msvc_warnings_off.h"\
	{$(INCLUDE)}"config\_prolog.h"\
	{$(INCLUDE)}"config\stl_apcc.h"\
	{$(INCLUDE)}"config\stl_apple.h"\
	{$(INCLUDE)}"config\stl_as400.h"\
	{$(INCLUDE)}"config\stl_bc.h"\
	{$(INCLUDE)}"config\stl_como.h"\
	{$(INCLUDE)}"config\stl_confix.h"\
	{$(INCLUDE)}"config\stl_dec.h"\
	{$(INCLUDE)}"config\stl_dec_vms.h"\
	{$(INCLUDE)}"config\stl_fujitsu.h"\
	{$(INCLUDE)}"config\stl_gcc.h"\
	{$(INCLUDE)}"config\stl_hpacc.h"\
	{$(INCLUDE)}"config\stl_ibm.h"\
	{$(INCLUDE)}"config\stl_intel.h"\
	{$(INCLUDE)}"config\stl_kai.h"\
	{$(INCLUDE)}"config\stl_msvc.h"\
	{$(INCLUDE)}"config\stl_mwerks.h"\
	{$(INCLUDE)}"config\stl_mycomp.h"\
	{$(INCLUDE)}"config\stl_sco.h"\
	{$(INCLUDE)}"config\stl_select_lib.h"\
	{$(INCLUDE)}"config\stl_sgi.h"\
	{$(INCLUDE)}"config\stl_solaris.h"\
	{$(INCLUDE)}"config\stl_sunpro.h"\
	{$(INCLUDE)}"config\stl_symantec.h"\
	{$(INCLUDE)}"config\stl_watcom.h"\
	{$(INCLUDE)}"config\stl_wince.h"\
	{$(INCLUDE)}"config\stlcomp.h"\
	{$(INCLUDE)}"config\vc_select_lib.h"\
	{$(INCLUDE)}"pthread.h"\
	{$(INCLUDE)}"stl\_abbrevs.h"\
	{$(INCLUDE)}"stl\_config.h"\
	{$(INCLUDE)}"stl\_config_compat.h"\
	{$(INCLUDE)}"stl\_config_compat_post.h"\
	{$(INCLUDE)}"stl\_epilog.h"\
	{$(INCLUDE)}"stl\_prolog.h"\
	{$(INCLUDE)}"stl\_site_config.h"\
	{$(INCLUDE)}"stl_user_config.h"\
	
NODEP_CPP_CLOUD=\
	"..\..\..\..\usr\include\pthread.h"\
	
# End Source File
# Begin Source File

SOURCE=.\dragparticleforce.cpp
DEP_CPP_DRAGP=\
	"..\editor\parser.h"\
	"..\editor\string_conversions.h"\
	"..\storm\include\c2_color.h"\
	"..\storm\include\c2_common.h"\
	"..\storm\include\c2_matrix.h"\
	"..\storm\include\c2_plane.h"\
	"..\storm\include\c2_ptrlist.h"\
	"..\storm\include\c2_quat.h"\
	"..\storm\include\c2_rect.h"\
	"..\storm\include\c2_sptr.h"\
	"..\storm\include\c2_sptrlist.h"\
	"..\storm\include\c2_string.h"\
	"..\storm\include\c2_ui.h"\
	"..\storm\include\c2_vectors.h"\
	"..\storm\include\DatatypeDef.h"\
	"..\storm\include\IStorm3D.h"\
	"..\storm\include\IStorm3D_Font.h"\
	"..\storm\include\IStorm3D_Helper.h"\
	"..\storm\include\IStorm3D_Light.h"\
	"..\storm\include\IStorm3D_Line.h"\
	"..\storm\include\IStorm3D_Material.h"\
	"..\storm\include\IStorm3D_Mesh.h"\
	"..\storm\include\IStorm3D_Model.h"\
	"..\storm\include\IStorm3D_Particle.h"\
	"..\storm\include\IStorm3D_Scene.h"\
	"..\storm\include\IStorm3D_Terrain.h"\
	"..\storm\include\IStorm3D_Texture.h"\
	"..\storm\include\Storm3D_Common.h"\
	"..\storm\include\Storm3D_Datatypes.h"\
	"..\storm\include\Storm3D_ObstacleMapDefs.h"\
	"..\storm\include\storm3d_ui.h"\
	".\dragparticleforce.h"\
	".\paramblock.h"\
	".\parseutil.h"\
	".\particlesystem.h"\
	".\track.h"\
	{$(INCLUDE)}"boost\assert.hpp"\
	{$(INCLUDE)}"boost\checked_delete.hpp"\
	{$(INCLUDE)}"boost\config.hpp"\
	{$(INCLUDE)}"boost\config\posix_features.hpp"\
	{$(INCLUDE)}"boost\config\select_compiler_config.hpp"\
	{$(INCLUDE)}"boost\config\select_platform_config.hpp"\
	{$(INCLUDE)}"boost\config\select_stdlib_config.hpp"\
	{$(INCLUDE)}"boost\config\suffix.hpp"\
	{$(INCLUDE)}"boost\current_function.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_linux.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lightweight_mutex.hpp"\
	{$(INCLUDE)}"boost\detail\limits.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_irix.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_linux.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_nop.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32_cs.hpp"\
	{$(INCLUDE)}"boost\detail\quick_allocator.hpp"\
	{$(INCLUDE)}"boost\detail\shared_count.hpp"\
	{$(INCLUDE)}"boost\detail\shared_ptr_nmt.hpp"\
	{$(INCLUDE)}"boost\detail\workaround.hpp"\
	{$(INCLUDE)}"boost\lexical_cast.hpp"\
	{$(INCLUDE)}"boost\limits.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\algorithm_namespace.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\dtp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\eti.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\lambda.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\msvc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\nttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\overload_resolution.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\preprocessor.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\static_constant.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\ice_cast.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\integral_wrapper.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_arity_param.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_support.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\def_params_tail.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\filter_params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\sub.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\tuple.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\template_arity_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\value_wknd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\void_spec.hpp"\
	{$(INCLUDE)}"boost\mpl\bool.hpp"\
	{$(INCLUDE)}"boost\mpl\bool_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\if.hpp"\
	{$(INCLUDE)}"boost\mpl\int.hpp"\
	{$(INCLUDE)}"boost\mpl\int_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\lambda_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\limits\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\void.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\add.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\sub.hpp"\
	{$(INCLUDE)}"boost\preprocessor\cat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\comma_if.hpp"\
	{$(INCLUDE)}"boost\preprocessor\config\config.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\edg\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\msvc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\iif.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\debug\error.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\check.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\is_binary.hpp"\
	{$(INCLUDE)}"boost\preprocessor\empty.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum_params.hpp"\
	{$(INCLUDE)}"boost\preprocessor\identity.hpp"\
	{$(INCLUDE)}"boost\preprocessor\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\iterate.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\adt.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\for_each_i.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\reverse.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\and.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bitand.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bool.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\compl.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repeat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\edg\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\msvc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\eat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\elem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\rem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\to_list.hpp"\
	{$(INCLUDE)}"boost\scoped_ptr.hpp"\
	{$(INCLUDE)}"boost\shared_ptr.hpp"\
	{$(INCLUDE)}"boost\static_assert.hpp"\
	{$(INCLUDE)}"boost\throw_exception.hpp"\
	{$(INCLUDE)}"boost\type_traits\add_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\alignment_of.hpp"\
	{$(INCLUDE)}"boost\type_traits\broken_compiler_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\config.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\cv_traits_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\false_result.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_and.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_eq.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_not.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_or.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_helper.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_type_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\template_arity_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\wrap.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\yes_no_type.hpp"\
	{$(INCLUDE)}"boost\type_traits\ice.hpp"\
	{$(INCLUDE)}"boost\type_traits\intrinsics.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_arithmetic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_array.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_class.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_convertible.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_enum.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_float.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_function.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_integral.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_function_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pod.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_same.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_scalar.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_union.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_void.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\type_with_alignment.hpp"\
	{$(INCLUDE)}"config\_epilog.h"\
	{$(INCLUDE)}"config\_msvc_warnings_off.h"\
	{$(INCLUDE)}"config\_prolog.h"\
	{$(INCLUDE)}"config\stl_apcc.h"\
	{$(INCLUDE)}"config\stl_apple.h"\
	{$(INCLUDE)}"config\stl_as400.h"\
	{$(INCLUDE)}"config\stl_bc.h"\
	{$(INCLUDE)}"config\stl_como.h"\
	{$(INCLUDE)}"config\stl_confix.h"\
	{$(INCLUDE)}"config\stl_dec.h"\
	{$(INCLUDE)}"config\stl_dec_vms.h"\
	{$(INCLUDE)}"config\stl_fujitsu.h"\
	{$(INCLUDE)}"config\stl_gcc.h"\
	{$(INCLUDE)}"config\stl_hpacc.h"\
	{$(INCLUDE)}"config\stl_ibm.h"\
	{$(INCLUDE)}"config\stl_intel.h"\
	{$(INCLUDE)}"config\stl_kai.h"\
	{$(INCLUDE)}"config\stl_msvc.h"\
	{$(INCLUDE)}"config\stl_mwerks.h"\
	{$(INCLUDE)}"config\stl_mycomp.h"\
	{$(INCLUDE)}"config\stl_sco.h"\
	{$(INCLUDE)}"config\stl_select_lib.h"\
	{$(INCLUDE)}"config\stl_sgi.h"\
	{$(INCLUDE)}"config\stl_solaris.h"\
	{$(INCLUDE)}"config\stl_sunpro.h"\
	{$(INCLUDE)}"config\stl_symantec.h"\
	{$(INCLUDE)}"config\stl_watcom.h"\
	{$(INCLUDE)}"config\stl_wince.h"\
	{$(INCLUDE)}"config\stlcomp.h"\
	{$(INCLUDE)}"config\vc_select_lib.h"\
	{$(INCLUDE)}"pthread.h"\
	{$(INCLUDE)}"stl\_abbrevs.h"\
	{$(INCLUDE)}"stl\_config.h"\
	{$(INCLUDE)}"stl\_config_compat.h"\
	{$(INCLUDE)}"stl\_config_compat_post.h"\
	{$(INCLUDE)}"stl\_epilog.h"\
	{$(INCLUDE)}"stl\_prolog.h"\
	{$(INCLUDE)}"stl\_site_config.h"\
	{$(INCLUDE)}"stl_user_config.h"\
	
NODEP_CPP_DRAGP=\
	"..\..\..\..\usr\include\pthread.h"\
	
# End Source File
# Begin Source File

SOURCE=.\floattrack.cpp
DEP_CPP_FLOAT=\
	".\track.h"\
	
# End Source File
# Begin Source File

SOURCE=.\main.cpp
DEP_CPP_MAIN_=\
	"..\editor\parser.h"\
	"..\editor\string_conversions.h"\
	"..\storm\include\c2_color.h"\
	"..\storm\include\c2_common.h"\
	"..\storm\include\c2_matrix.h"\
	"..\storm\include\c2_plane.h"\
	"..\storm\include\c2_ptrlist.h"\
	"..\storm\include\c2_quat.h"\
	"..\storm\include\c2_rect.h"\
	"..\storm\include\c2_sptr.h"\
	"..\storm\include\c2_sptrlist.h"\
	"..\storm\include\c2_string.h"\
	"..\storm\include\c2_ui.h"\
	"..\storm\include\c2_vectors.h"\
	"..\storm\include\DatatypeDef.h"\
	"..\storm\include\IStorm3D.h"\
	"..\storm\include\IStorm3D_Font.h"\
	"..\storm\include\IStorm3D_Helper.h"\
	"..\storm\include\IStorm3D_Light.h"\
	"..\storm\include\IStorm3D_Line.h"\
	"..\storm\include\IStorm3D_Material.h"\
	"..\storm\include\IStorm3D_Mesh.h"\
	"..\storm\include\IStorm3D_Model.h"\
	"..\storm\include\IStorm3D_Particle.h"\
	"..\storm\include\IStorm3D_Scene.h"\
	"..\storm\include\IStorm3D_Terrain.h"\
	"..\storm\include\IStorm3D_Texture.h"\
	"..\storm\include\Storm3D_Common.h"\
	"..\storm\include\Storm3D_Datatypes.h"\
	"..\storm\include\Storm3D_ObstacleMapDefs.h"\
	"..\storm\include\storm3d_ui.h"\
	".\cloudparticlesystem.h"\
	".\dragparticleforce.h"\
	".\paramblock.h"\
	".\parseutil.h"\
	".\particleeffect.h"\
	".\particlegravity.h"\
	".\particlesystem.h"\
	".\particlesystemmanager.h"\
	".\pointarrayparticlesystem.h"\
	".\sprayparticlesystem.h"\
	".\track.h"\
	{$(INCLUDE)}"boost\assert.hpp"\
	{$(INCLUDE)}"boost\checked_delete.hpp"\
	{$(INCLUDE)}"boost\config.hpp"\
	{$(INCLUDE)}"boost\config\posix_features.hpp"\
	{$(INCLUDE)}"boost\config\select_compiler_config.hpp"\
	{$(INCLUDE)}"boost\config\select_platform_config.hpp"\
	{$(INCLUDE)}"boost\config\select_stdlib_config.hpp"\
	{$(INCLUDE)}"boost\config\suffix.hpp"\
	{$(INCLUDE)}"boost\current_function.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_linux.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lightweight_mutex.hpp"\
	{$(INCLUDE)}"boost\detail\limits.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_irix.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_linux.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_nop.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32_cs.hpp"\
	{$(INCLUDE)}"boost\detail\quick_allocator.hpp"\
	{$(INCLUDE)}"boost\detail\shared_count.hpp"\
	{$(INCLUDE)}"boost\detail\shared_ptr_nmt.hpp"\
	{$(INCLUDE)}"boost\detail\workaround.hpp"\
	{$(INCLUDE)}"boost\lexical_cast.hpp"\
	{$(INCLUDE)}"boost\limits.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\algorithm_namespace.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\dtp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\eti.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\lambda.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\msvc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\nttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\overload_resolution.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\preprocessor.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\static_constant.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\ice_cast.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\integral_wrapper.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_arity_param.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_support.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\def_params_tail.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\filter_params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\sub.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\tuple.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\template_arity_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\value_wknd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\void_spec.hpp"\
	{$(INCLUDE)}"boost\mpl\bool.hpp"\
	{$(INCLUDE)}"boost\mpl\bool_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\if.hpp"\
	{$(INCLUDE)}"boost\mpl\int.hpp"\
	{$(INCLUDE)}"boost\mpl\int_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\lambda_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\limits\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\void.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\add.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\sub.hpp"\
	{$(INCLUDE)}"boost\preprocessor\cat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\comma_if.hpp"\
	{$(INCLUDE)}"boost\preprocessor\config\config.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\edg\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\msvc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\iif.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\debug\error.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\check.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\is_binary.hpp"\
	{$(INCLUDE)}"boost\preprocessor\empty.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum_params.hpp"\
	{$(INCLUDE)}"boost\preprocessor\identity.hpp"\
	{$(INCLUDE)}"boost\preprocessor\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\iterate.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\adt.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\for_each_i.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\reverse.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\and.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bitand.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bool.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\compl.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repeat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\edg\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\msvc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\eat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\elem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\rem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\to_list.hpp"\
	{$(INCLUDE)}"boost\scoped_ptr.hpp"\
	{$(INCLUDE)}"boost\shared_ptr.hpp"\
	{$(INCLUDE)}"boost\static_assert.hpp"\
	{$(INCLUDE)}"boost\throw_exception.hpp"\
	{$(INCLUDE)}"boost\type_traits\add_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\alignment_of.hpp"\
	{$(INCLUDE)}"boost\type_traits\broken_compiler_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\config.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\cv_traits_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\false_result.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_and.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_eq.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_not.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_or.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_helper.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_type_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\template_arity_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\wrap.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\yes_no_type.hpp"\
	{$(INCLUDE)}"boost\type_traits\ice.hpp"\
	{$(INCLUDE)}"boost\type_traits\intrinsics.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_arithmetic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_array.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_class.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_convertible.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_enum.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_float.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_function.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_integral.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_function_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pod.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_same.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_scalar.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_union.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_void.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\type_with_alignment.hpp"\
	{$(INCLUDE)}"config\_epilog.h"\
	{$(INCLUDE)}"config\_msvc_warnings_off.h"\
	{$(INCLUDE)}"config\_prolog.h"\
	{$(INCLUDE)}"config\stl_apcc.h"\
	{$(INCLUDE)}"config\stl_apple.h"\
	{$(INCLUDE)}"config\stl_as400.h"\
	{$(INCLUDE)}"config\stl_bc.h"\
	{$(INCLUDE)}"config\stl_como.h"\
	{$(INCLUDE)}"config\stl_confix.h"\
	{$(INCLUDE)}"config\stl_dec.h"\
	{$(INCLUDE)}"config\stl_dec_vms.h"\
	{$(INCLUDE)}"config\stl_fujitsu.h"\
	{$(INCLUDE)}"config\stl_gcc.h"\
	{$(INCLUDE)}"config\stl_hpacc.h"\
	{$(INCLUDE)}"config\stl_ibm.h"\
	{$(INCLUDE)}"config\stl_intel.h"\
	{$(INCLUDE)}"config\stl_kai.h"\
	{$(INCLUDE)}"config\stl_msvc.h"\
	{$(INCLUDE)}"config\stl_mwerks.h"\
	{$(INCLUDE)}"config\stl_mycomp.h"\
	{$(INCLUDE)}"config\stl_sco.h"\
	{$(INCLUDE)}"config\stl_select_lib.h"\
	{$(INCLUDE)}"config\stl_sgi.h"\
	{$(INCLUDE)}"config\stl_solaris.h"\
	{$(INCLUDE)}"config\stl_sunpro.h"\
	{$(INCLUDE)}"config\stl_symantec.h"\
	{$(INCLUDE)}"config\stl_watcom.h"\
	{$(INCLUDE)}"config\stl_wince.h"\
	{$(INCLUDE)}"config\stlcomp.h"\
	{$(INCLUDE)}"config\vc_select_lib.h"\
	{$(INCLUDE)}"pthread.h"\
	{$(INCLUDE)}"stl\_abbrevs.h"\
	{$(INCLUDE)}"stl\_config.h"\
	{$(INCLUDE)}"stl\_config_compat.h"\
	{$(INCLUDE)}"stl\_config_compat_post.h"\
	{$(INCLUDE)}"stl\_epilog.h"\
	{$(INCLUDE)}"stl\_prolog.h"\
	{$(INCLUDE)}"stl\_site_config.h"\
	{$(INCLUDE)}"stl_user_config.h"\
	
NODEP_CPP_MAIN_=\
	"..\..\..\..\usr\include\pthread.h"\
	
# End Source File
# Begin Source File

SOURCE=.\paramblock.cpp
DEP_CPP_PARAM=\
	"..\editor\parser.h"\
	".\paramblock.h"\
	".\track.h"\
	{$(INCLUDE)}"boost\assert.hpp"\
	{$(INCLUDE)}"boost\checked_delete.hpp"\
	{$(INCLUDE)}"boost\config.hpp"\
	{$(INCLUDE)}"boost\config\posix_features.hpp"\
	{$(INCLUDE)}"boost\config\select_compiler_config.hpp"\
	{$(INCLUDE)}"boost\config\select_platform_config.hpp"\
	{$(INCLUDE)}"boost\config\select_stdlib_config.hpp"\
	{$(INCLUDE)}"boost\config\suffix.hpp"\
	{$(INCLUDE)}"boost\current_function.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_linux.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lightweight_mutex.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_irix.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_linux.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_nop.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32_cs.hpp"\
	{$(INCLUDE)}"boost\detail\quick_allocator.hpp"\
	{$(INCLUDE)}"boost\detail\shared_count.hpp"\
	{$(INCLUDE)}"boost\detail\shared_ptr_nmt.hpp"\
	{$(INCLUDE)}"boost\detail\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\algorithm_namespace.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\dtp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\eti.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\lambda.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\msvc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\nttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\overload_resolution.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\preprocessor.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\static_constant.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\ice_cast.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\integral_wrapper.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_arity_param.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_support.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\def_params_tail.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\filter_params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\sub.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\tuple.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\template_arity_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\value_wknd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\void_spec.hpp"\
	{$(INCLUDE)}"boost\mpl\bool.hpp"\
	{$(INCLUDE)}"boost\mpl\bool_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\if.hpp"\
	{$(INCLUDE)}"boost\mpl\int.hpp"\
	{$(INCLUDE)}"boost\mpl\int_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\lambda_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\limits\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\void.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\add.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\sub.hpp"\
	{$(INCLUDE)}"boost\preprocessor\cat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\comma_if.hpp"\
	{$(INCLUDE)}"boost\preprocessor\config\config.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\edg\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\msvc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\iif.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\debug\error.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\check.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\is_binary.hpp"\
	{$(INCLUDE)}"boost\preprocessor\empty.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum_params.hpp"\
	{$(INCLUDE)}"boost\preprocessor\identity.hpp"\
	{$(INCLUDE)}"boost\preprocessor\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\iterate.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\adt.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\for_each_i.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\reverse.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\and.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bitand.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bool.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\compl.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repeat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\edg\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\msvc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\eat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\elem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\rem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\to_list.hpp"\
	{$(INCLUDE)}"boost\scoped_ptr.hpp"\
	{$(INCLUDE)}"boost\shared_ptr.hpp"\
	{$(INCLUDE)}"boost\static_assert.hpp"\
	{$(INCLUDE)}"boost\throw_exception.hpp"\
	{$(INCLUDE)}"boost\type_traits\add_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\alignment_of.hpp"\
	{$(INCLUDE)}"boost\type_traits\broken_compiler_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\config.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\cv_traits_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\false_result.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_and.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_eq.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_not.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_or.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_helper.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_type_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\template_arity_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\wrap.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\yes_no_type.hpp"\
	{$(INCLUDE)}"boost\type_traits\ice.hpp"\
	{$(INCLUDE)}"boost\type_traits\intrinsics.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_arithmetic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_array.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_class.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_convertible.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_enum.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_float.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_function.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_integral.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_function_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pod.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_same.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_scalar.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_union.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_void.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\type_with_alignment.hpp"\
	{$(INCLUDE)}"config\_epilog.h"\
	{$(INCLUDE)}"config\_msvc_warnings_off.h"\
	{$(INCLUDE)}"config\_prolog.h"\
	{$(INCLUDE)}"config\stl_apcc.h"\
	{$(INCLUDE)}"config\stl_apple.h"\
	{$(INCLUDE)}"config\stl_as400.h"\
	{$(INCLUDE)}"config\stl_bc.h"\
	{$(INCLUDE)}"config\stl_como.h"\
	{$(INCLUDE)}"config\stl_confix.h"\
	{$(INCLUDE)}"config\stl_dec.h"\
	{$(INCLUDE)}"config\stl_dec_vms.h"\
	{$(INCLUDE)}"config\stl_fujitsu.h"\
	{$(INCLUDE)}"config\stl_gcc.h"\
	{$(INCLUDE)}"config\stl_hpacc.h"\
	{$(INCLUDE)}"config\stl_ibm.h"\
	{$(INCLUDE)}"config\stl_intel.h"\
	{$(INCLUDE)}"config\stl_kai.h"\
	{$(INCLUDE)}"config\stl_msvc.h"\
	{$(INCLUDE)}"config\stl_mwerks.h"\
	{$(INCLUDE)}"config\stl_mycomp.h"\
	{$(INCLUDE)}"config\stl_sco.h"\
	{$(INCLUDE)}"config\stl_select_lib.h"\
	{$(INCLUDE)}"config\stl_sgi.h"\
	{$(INCLUDE)}"config\stl_solaris.h"\
	{$(INCLUDE)}"config\stl_sunpro.h"\
	{$(INCLUDE)}"config\stl_symantec.h"\
	{$(INCLUDE)}"config\stl_watcom.h"\
	{$(INCLUDE)}"config\stl_wince.h"\
	{$(INCLUDE)}"config\stlcomp.h"\
	{$(INCLUDE)}"config\vc_select_lib.h"\
	{$(INCLUDE)}"pthread.h"\
	{$(INCLUDE)}"stl\_abbrevs.h"\
	{$(INCLUDE)}"stl\_config.h"\
	{$(INCLUDE)}"stl\_config_compat.h"\
	{$(INCLUDE)}"stl\_config_compat_post.h"\
	{$(INCLUDE)}"stl\_epilog.h"\
	{$(INCLUDE)}"stl\_prolog.h"\
	{$(INCLUDE)}"stl\_site_config.h"\
	{$(INCLUDE)}"stl_user_config.h"\
	
NODEP_CPP_PARAM=\
	"..\..\..\..\usr\include\pthread.h"\
	
# End Source File
# Begin Source File

SOURCE=..\editor\parser.cpp
# PROP Exclude_From_Build 1
# End Source File
# Begin Source File

SOURCE=.\parser2.cpp
DEP_CPP_PARSE=\
	"..\editor\parser.h"\
	{$(INCLUDE)}"boost\assert.hpp"\
	{$(INCLUDE)}"boost\checked_delete.hpp"\
	{$(INCLUDE)}"boost\config.hpp"\
	{$(INCLUDE)}"boost\config\posix_features.hpp"\
	{$(INCLUDE)}"boost\config\select_compiler_config.hpp"\
	{$(INCLUDE)}"boost\config\select_platform_config.hpp"\
	{$(INCLUDE)}"boost\config\select_stdlib_config.hpp"\
	{$(INCLUDE)}"boost\config\suffix.hpp"\
	{$(INCLUDE)}"boost\current_function.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_linux.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lightweight_mutex.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_irix.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_linux.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_nop.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32_cs.hpp"\
	{$(INCLUDE)}"boost\detail\quick_allocator.hpp"\
	{$(INCLUDE)}"boost\detail\shared_count.hpp"\
	{$(INCLUDE)}"boost\detail\shared_ptr_nmt.hpp"\
	{$(INCLUDE)}"boost\detail\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\algorithm_namespace.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\dtp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\eti.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\lambda.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\msvc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\nttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\overload_resolution.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\preprocessor.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\static_constant.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\ice_cast.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\integral_wrapper.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_arity_param.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_support.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\def_params_tail.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\filter_params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\sub.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\tuple.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\template_arity_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\value_wknd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\void_spec.hpp"\
	{$(INCLUDE)}"boost\mpl\bool.hpp"\
	{$(INCLUDE)}"boost\mpl\bool_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\if.hpp"\
	{$(INCLUDE)}"boost\mpl\int.hpp"\
	{$(INCLUDE)}"boost\mpl\int_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\lambda_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\limits\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\void.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\add.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\sub.hpp"\
	{$(INCLUDE)}"boost\preprocessor\cat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\comma_if.hpp"\
	{$(INCLUDE)}"boost\preprocessor\config\config.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\edg\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\msvc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\iif.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\debug\error.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\check.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\is_binary.hpp"\
	{$(INCLUDE)}"boost\preprocessor\empty.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum_params.hpp"\
	{$(INCLUDE)}"boost\preprocessor\identity.hpp"\
	{$(INCLUDE)}"boost\preprocessor\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\iterate.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\adt.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\for_each_i.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\reverse.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\and.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bitand.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bool.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\compl.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repeat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\edg\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\msvc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\eat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\elem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\rem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\to_list.hpp"\
	{$(INCLUDE)}"boost\scoped_ptr.hpp"\
	{$(INCLUDE)}"boost\shared_ptr.hpp"\
	{$(INCLUDE)}"boost\static_assert.hpp"\
	{$(INCLUDE)}"boost\throw_exception.hpp"\
	{$(INCLUDE)}"boost\type_traits\add_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\alignment_of.hpp"\
	{$(INCLUDE)}"boost\type_traits\broken_compiler_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\config.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\cv_traits_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\false_result.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_and.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_eq.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_not.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_or.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_helper.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_type_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\template_arity_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\wrap.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\yes_no_type.hpp"\
	{$(INCLUDE)}"boost\type_traits\ice.hpp"\
	{$(INCLUDE)}"boost\type_traits\intrinsics.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_arithmetic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_array.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_class.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_convertible.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_enum.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_float.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_function.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_integral.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_function_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pod.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_same.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_scalar.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_union.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_void.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\type_with_alignment.hpp"\
	{$(INCLUDE)}"config\_epilog.h"\
	{$(INCLUDE)}"config\_msvc_warnings_off.h"\
	{$(INCLUDE)}"config\_prolog.h"\
	{$(INCLUDE)}"config\stl_apcc.h"\
	{$(INCLUDE)}"config\stl_apple.h"\
	{$(INCLUDE)}"config\stl_as400.h"\
	{$(INCLUDE)}"config\stl_bc.h"\
	{$(INCLUDE)}"config\stl_como.h"\
	{$(INCLUDE)}"config\stl_confix.h"\
	{$(INCLUDE)}"config\stl_dec.h"\
	{$(INCLUDE)}"config\stl_dec_vms.h"\
	{$(INCLUDE)}"config\stl_fujitsu.h"\
	{$(INCLUDE)}"config\stl_gcc.h"\
	{$(INCLUDE)}"config\stl_hpacc.h"\
	{$(INCLUDE)}"config\stl_ibm.h"\
	{$(INCLUDE)}"config\stl_intel.h"\
	{$(INCLUDE)}"config\stl_kai.h"\
	{$(INCLUDE)}"config\stl_msvc.h"\
	{$(INCLUDE)}"config\stl_mwerks.h"\
	{$(INCLUDE)}"config\stl_mycomp.h"\
	{$(INCLUDE)}"config\stl_sco.h"\
	{$(INCLUDE)}"config\stl_select_lib.h"\
	{$(INCLUDE)}"config\stl_sgi.h"\
	{$(INCLUDE)}"config\stl_solaris.h"\
	{$(INCLUDE)}"config\stl_sunpro.h"\
	{$(INCLUDE)}"config\stl_symantec.h"\
	{$(INCLUDE)}"config\stl_watcom.h"\
	{$(INCLUDE)}"config\stl_wince.h"\
	{$(INCLUDE)}"config\stlcomp.h"\
	{$(INCLUDE)}"config\vc_select_lib.h"\
	{$(INCLUDE)}"pthread.h"\
	{$(INCLUDE)}"stl\_abbrevs.h"\
	{$(INCLUDE)}"stl\_config.h"\
	{$(INCLUDE)}"stl\_config_compat.h"\
	{$(INCLUDE)}"stl\_config_compat_post.h"\
	{$(INCLUDE)}"stl\_epilog.h"\
	{$(INCLUDE)}"stl\_prolog.h"\
	{$(INCLUDE)}"stl\_site_config.h"\
	{$(INCLUDE)}"stl_user_config.h"\
	
NODEP_CPP_PARSE=\
	"..\..\..\..\usr\include\pthread.h"\
	
# End Source File
# Begin Source File

SOURCE=.\parseutil.cpp
DEP_CPP_PARSEU=\
	"..\editor\parser.h"\
	"..\editor\string_conversions.h"\
	"..\storm\include\c2_color.h"\
	"..\storm\include\c2_common.h"\
	"..\storm\include\c2_matrix.h"\
	"..\storm\include\c2_plane.h"\
	"..\storm\include\c2_ptrlist.h"\
	"..\storm\include\c2_quat.h"\
	"..\storm\include\c2_rect.h"\
	"..\storm\include\c2_sptr.h"\
	"..\storm\include\c2_sptrlist.h"\
	"..\storm\include\c2_string.h"\
	"..\storm\include\c2_ui.h"\
	"..\storm\include\c2_vectors.h"\
	"..\storm\include\DatatypeDef.h"\
	"..\storm\include\IStorm3D.h"\
	"..\storm\include\IStorm3D_Font.h"\
	"..\storm\include\IStorm3D_Helper.h"\
	"..\storm\include\IStorm3D_Light.h"\
	"..\storm\include\IStorm3D_Line.h"\
	"..\storm\include\IStorm3D_Material.h"\
	"..\storm\include\IStorm3D_Mesh.h"\
	"..\storm\include\IStorm3D_Model.h"\
	"..\storm\include\IStorm3D_Particle.h"\
	"..\storm\include\IStorm3D_Scene.h"\
	"..\storm\include\IStorm3D_Terrain.h"\
	"..\storm\include\IStorm3D_Texture.h"\
	"..\storm\include\Storm3D_Common.h"\
	"..\storm\include\Storm3D_Datatypes.h"\
	"..\storm\include\Storm3D_ObstacleMapDefs.h"\
	"..\storm\include\storm3d_ui.h"\
	".\paramblock.h"\
	".\parseutil.h"\
	".\track.h"\
	{$(INCLUDE)}"boost\assert.hpp"\
	{$(INCLUDE)}"boost\checked_delete.hpp"\
	{$(INCLUDE)}"boost\config.hpp"\
	{$(INCLUDE)}"boost\config\posix_features.hpp"\
	{$(INCLUDE)}"boost\config\select_compiler_config.hpp"\
	{$(INCLUDE)}"boost\config\select_platform_config.hpp"\
	{$(INCLUDE)}"boost\config\select_stdlib_config.hpp"\
	{$(INCLUDE)}"boost\config\suffix.hpp"\
	{$(INCLUDE)}"boost\current_function.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_linux.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lightweight_mutex.hpp"\
	{$(INCLUDE)}"boost\detail\limits.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_irix.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_linux.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_nop.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32_cs.hpp"\
	{$(INCLUDE)}"boost\detail\quick_allocator.hpp"\
	{$(INCLUDE)}"boost\detail\shared_count.hpp"\
	{$(INCLUDE)}"boost\detail\shared_ptr_nmt.hpp"\
	{$(INCLUDE)}"boost\detail\workaround.hpp"\
	{$(INCLUDE)}"boost\lexical_cast.hpp"\
	{$(INCLUDE)}"boost\limits.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\algorithm_namespace.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\dtp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\eti.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\lambda.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\msvc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\nttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\overload_resolution.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\preprocessor.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\static_constant.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\ice_cast.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\integral_wrapper.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_arity_param.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_support.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\def_params_tail.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\filter_params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\sub.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\tuple.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\template_arity_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\value_wknd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\void_spec.hpp"\
	{$(INCLUDE)}"boost\mpl\bool.hpp"\
	{$(INCLUDE)}"boost\mpl\bool_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\if.hpp"\
	{$(INCLUDE)}"boost\mpl\int.hpp"\
	{$(INCLUDE)}"boost\mpl\int_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\lambda_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\limits\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\void.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\add.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\sub.hpp"\
	{$(INCLUDE)}"boost\preprocessor\cat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\comma_if.hpp"\
	{$(INCLUDE)}"boost\preprocessor\config\config.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\edg\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\msvc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\iif.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\debug\error.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\check.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\is_binary.hpp"\
	{$(INCLUDE)}"boost\preprocessor\empty.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum_params.hpp"\
	{$(INCLUDE)}"boost\preprocessor\identity.hpp"\
	{$(INCLUDE)}"boost\preprocessor\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\iterate.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\adt.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\for_each_i.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\reverse.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\and.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bitand.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bool.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\compl.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repeat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\edg\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\msvc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\eat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\elem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\rem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\to_list.hpp"\
	{$(INCLUDE)}"boost\scoped_ptr.hpp"\
	{$(INCLUDE)}"boost\shared_ptr.hpp"\
	{$(INCLUDE)}"boost\static_assert.hpp"\
	{$(INCLUDE)}"boost\throw_exception.hpp"\
	{$(INCLUDE)}"boost\type_traits\add_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\alignment_of.hpp"\
	{$(INCLUDE)}"boost\type_traits\broken_compiler_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\config.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\cv_traits_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\false_result.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_and.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_eq.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_not.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_or.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_helper.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_type_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\template_arity_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\wrap.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\yes_no_type.hpp"\
	{$(INCLUDE)}"boost\type_traits\ice.hpp"\
	{$(INCLUDE)}"boost\type_traits\intrinsics.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_arithmetic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_array.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_class.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_convertible.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_enum.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_float.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_function.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_integral.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_function_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pod.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_same.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_scalar.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_union.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_void.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\type_with_alignment.hpp"\
	{$(INCLUDE)}"config\_epilog.h"\
	{$(INCLUDE)}"config\_msvc_warnings_off.h"\
	{$(INCLUDE)}"config\_prolog.h"\
	{$(INCLUDE)}"config\stl_apcc.h"\
	{$(INCLUDE)}"config\stl_apple.h"\
	{$(INCLUDE)}"config\stl_as400.h"\
	{$(INCLUDE)}"config\stl_bc.h"\
	{$(INCLUDE)}"config\stl_como.h"\
	{$(INCLUDE)}"config\stl_confix.h"\
	{$(INCLUDE)}"config\stl_dec.h"\
	{$(INCLUDE)}"config\stl_dec_vms.h"\
	{$(INCLUDE)}"config\stl_fujitsu.h"\
	{$(INCLUDE)}"config\stl_gcc.h"\
	{$(INCLUDE)}"config\stl_hpacc.h"\
	{$(INCLUDE)}"config\stl_ibm.h"\
	{$(INCLUDE)}"config\stl_intel.h"\
	{$(INCLUDE)}"config\stl_kai.h"\
	{$(INCLUDE)}"config\stl_msvc.h"\
	{$(INCLUDE)}"config\stl_mwerks.h"\
	{$(INCLUDE)}"config\stl_mycomp.h"\
	{$(INCLUDE)}"config\stl_sco.h"\
	{$(INCLUDE)}"config\stl_select_lib.h"\
	{$(INCLUDE)}"config\stl_sgi.h"\
	{$(INCLUDE)}"config\stl_solaris.h"\
	{$(INCLUDE)}"config\stl_sunpro.h"\
	{$(INCLUDE)}"config\stl_symantec.h"\
	{$(INCLUDE)}"config\stl_watcom.h"\
	{$(INCLUDE)}"config\stl_wince.h"\
	{$(INCLUDE)}"config\stlcomp.h"\
	{$(INCLUDE)}"config\vc_select_lib.h"\
	{$(INCLUDE)}"pthread.h"\
	{$(INCLUDE)}"stl\_abbrevs.h"\
	{$(INCLUDE)}"stl\_config.h"\
	{$(INCLUDE)}"stl\_config_compat.h"\
	{$(INCLUDE)}"stl\_config_compat_post.h"\
	{$(INCLUDE)}"stl\_epilog.h"\
	{$(INCLUDE)}"stl\_prolog.h"\
	{$(INCLUDE)}"stl\_site_config.h"\
	{$(INCLUDE)}"stl_user_config.h"\
	
NODEP_CPP_PARSEU=\
	"..\..\..\..\usr\include\pthread.h"\
	
# End Source File
# Begin Source File

SOURCE=.\particleeffect.cpp
DEP_CPP_PARTI=\
	"..\editor\parser.h"\
	"..\editor\string_conversions.h"\
	"..\storm\include\c2_color.h"\
	"..\storm\include\c2_common.h"\
	"..\storm\include\c2_matrix.h"\
	"..\storm\include\c2_plane.h"\
	"..\storm\include\c2_ptrlist.h"\
	"..\storm\include\c2_quat.h"\
	"..\storm\include\c2_rect.h"\
	"..\storm\include\c2_sptr.h"\
	"..\storm\include\c2_sptrlist.h"\
	"..\storm\include\c2_string.h"\
	"..\storm\include\c2_ui.h"\
	"..\storm\include\c2_vectors.h"\
	"..\storm\include\DatatypeDef.h"\
	"..\storm\include\IStorm3D.h"\
	"..\storm\include\IStorm3D_Font.h"\
	"..\storm\include\IStorm3D_Helper.h"\
	"..\storm\include\IStorm3D_Light.h"\
	"..\storm\include\IStorm3D_Line.h"\
	"..\storm\include\IStorm3D_Material.h"\
	"..\storm\include\IStorm3D_Mesh.h"\
	"..\storm\include\IStorm3D_Model.h"\
	"..\storm\include\IStorm3D_Particle.h"\
	"..\storm\include\IStorm3D_Scene.h"\
	"..\storm\include\IStorm3D_Terrain.h"\
	"..\storm\include\IStorm3D_Texture.h"\
	"..\storm\include\Storm3D_Common.h"\
	"..\storm\include\Storm3D_Datatypes.h"\
	"..\storm\include\Storm3D_ObstacleMapDefs.h"\
	"..\storm\include\storm3d_ui.h"\
	".\paramblock.h"\
	".\parseutil.h"\
	".\particleeffect.h"\
	".\particlesystem.h"\
	".\particlesystemmanager.h"\
	".\track.h"\
	{$(INCLUDE)}"boost\assert.hpp"\
	{$(INCLUDE)}"boost\checked_delete.hpp"\
	{$(INCLUDE)}"boost\config.hpp"\
	{$(INCLUDE)}"boost\config\posix_features.hpp"\
	{$(INCLUDE)}"boost\config\select_compiler_config.hpp"\
	{$(INCLUDE)}"boost\config\select_platform_config.hpp"\
	{$(INCLUDE)}"boost\config\select_stdlib_config.hpp"\
	{$(INCLUDE)}"boost\config\suffix.hpp"\
	{$(INCLUDE)}"boost\current_function.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_linux.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lightweight_mutex.hpp"\
	{$(INCLUDE)}"boost\detail\limits.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_irix.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_linux.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_nop.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32_cs.hpp"\
	{$(INCLUDE)}"boost\detail\quick_allocator.hpp"\
	{$(INCLUDE)}"boost\detail\shared_count.hpp"\
	{$(INCLUDE)}"boost\detail\shared_ptr_nmt.hpp"\
	{$(INCLUDE)}"boost\detail\workaround.hpp"\
	{$(INCLUDE)}"boost\lexical_cast.hpp"\
	{$(INCLUDE)}"boost\limits.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\algorithm_namespace.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\dtp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\eti.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\lambda.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\msvc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\nttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\overload_resolution.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\preprocessor.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\static_constant.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\ice_cast.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\integral_wrapper.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_arity_param.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_support.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\def_params_tail.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\filter_params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\sub.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\tuple.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\template_arity_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\value_wknd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\void_spec.hpp"\
	{$(INCLUDE)}"boost\mpl\bool.hpp"\
	{$(INCLUDE)}"boost\mpl\bool_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\if.hpp"\
	{$(INCLUDE)}"boost\mpl\int.hpp"\
	{$(INCLUDE)}"boost\mpl\int_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\lambda_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\limits\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\void.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\add.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\sub.hpp"\
	{$(INCLUDE)}"boost\preprocessor\cat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\comma_if.hpp"\
	{$(INCLUDE)}"boost\preprocessor\config\config.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\edg\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\msvc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\iif.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\debug\error.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\check.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\is_binary.hpp"\
	{$(INCLUDE)}"boost\preprocessor\empty.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum_params.hpp"\
	{$(INCLUDE)}"boost\preprocessor\identity.hpp"\
	{$(INCLUDE)}"boost\preprocessor\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\iterate.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\adt.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\for_each_i.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\reverse.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\and.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bitand.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bool.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\compl.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repeat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\edg\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\msvc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\eat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\elem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\rem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\to_list.hpp"\
	{$(INCLUDE)}"boost\scoped_ptr.hpp"\
	{$(INCLUDE)}"boost\shared_ptr.hpp"\
	{$(INCLUDE)}"boost\static_assert.hpp"\
	{$(INCLUDE)}"boost\throw_exception.hpp"\
	{$(INCLUDE)}"boost\type_traits\add_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\alignment_of.hpp"\
	{$(INCLUDE)}"boost\type_traits\broken_compiler_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\config.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\cv_traits_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\false_result.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_and.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_eq.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_not.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_or.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_helper.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_type_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\template_arity_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\wrap.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\yes_no_type.hpp"\
	{$(INCLUDE)}"boost\type_traits\ice.hpp"\
	{$(INCLUDE)}"boost\type_traits\intrinsics.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_arithmetic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_array.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_class.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_convertible.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_enum.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_float.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_function.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_integral.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_function_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pod.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_same.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_scalar.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_union.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_void.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\type_with_alignment.hpp"\
	{$(INCLUDE)}"config\_epilog.h"\
	{$(INCLUDE)}"config\_msvc_warnings_off.h"\
	{$(INCLUDE)}"config\_prolog.h"\
	{$(INCLUDE)}"config\stl_apcc.h"\
	{$(INCLUDE)}"config\stl_apple.h"\
	{$(INCLUDE)}"config\stl_as400.h"\
	{$(INCLUDE)}"config\stl_bc.h"\
	{$(INCLUDE)}"config\stl_como.h"\
	{$(INCLUDE)}"config\stl_confix.h"\
	{$(INCLUDE)}"config\stl_dec.h"\
	{$(INCLUDE)}"config\stl_dec_vms.h"\
	{$(INCLUDE)}"config\stl_fujitsu.h"\
	{$(INCLUDE)}"config\stl_gcc.h"\
	{$(INCLUDE)}"config\stl_hpacc.h"\
	{$(INCLUDE)}"config\stl_ibm.h"\
	{$(INCLUDE)}"config\stl_intel.h"\
	{$(INCLUDE)}"config\stl_kai.h"\
	{$(INCLUDE)}"config\stl_msvc.h"\
	{$(INCLUDE)}"config\stl_mwerks.h"\
	{$(INCLUDE)}"config\stl_mycomp.h"\
	{$(INCLUDE)}"config\stl_sco.h"\
	{$(INCLUDE)}"config\stl_select_lib.h"\
	{$(INCLUDE)}"config\stl_sgi.h"\
	{$(INCLUDE)}"config\stl_solaris.h"\
	{$(INCLUDE)}"config\stl_sunpro.h"\
	{$(INCLUDE)}"config\stl_symantec.h"\
	{$(INCLUDE)}"config\stl_watcom.h"\
	{$(INCLUDE)}"config\stl_wince.h"\
	{$(INCLUDE)}"config\stlcomp.h"\
	{$(INCLUDE)}"config\vc_select_lib.h"\
	{$(INCLUDE)}"pthread.h"\
	{$(INCLUDE)}"stl\_abbrevs.h"\
	{$(INCLUDE)}"stl\_config.h"\
	{$(INCLUDE)}"stl\_config_compat.h"\
	{$(INCLUDE)}"stl\_config_compat_post.h"\
	{$(INCLUDE)}"stl\_epilog.h"\
	{$(INCLUDE)}"stl\_prolog.h"\
	{$(INCLUDE)}"stl\_site_config.h"\
	{$(INCLUDE)}"stl_user_config.h"\
	
NODEP_CPP_PARTI=\
	"..\..\..\..\usr\include\pthread.h"\
	
# End Source File
# Begin Source File

SOURCE=.\particlegravity.cpp
DEP_CPP_PARTIC=\
	"..\editor\parser.h"\
	"..\editor\string_conversions.h"\
	"..\storm\include\c2_color.h"\
	"..\storm\include\c2_common.h"\
	"..\storm\include\c2_matrix.h"\
	"..\storm\include\c2_plane.h"\
	"..\storm\include\c2_ptrlist.h"\
	"..\storm\include\c2_quat.h"\
	"..\storm\include\c2_rect.h"\
	"..\storm\include\c2_sptr.h"\
	"..\storm\include\c2_sptrlist.h"\
	"..\storm\include\c2_string.h"\
	"..\storm\include\c2_ui.h"\
	"..\storm\include\c2_vectors.h"\
	"..\storm\include\DatatypeDef.h"\
	"..\storm\include\IStorm3D.h"\
	"..\storm\include\IStorm3D_Font.h"\
	"..\storm\include\IStorm3D_Helper.h"\
	"..\storm\include\IStorm3D_Light.h"\
	"..\storm\include\IStorm3D_Line.h"\
	"..\storm\include\IStorm3D_Material.h"\
	"..\storm\include\IStorm3D_Mesh.h"\
	"..\storm\include\IStorm3D_Model.h"\
	"..\storm\include\IStorm3D_Particle.h"\
	"..\storm\include\IStorm3D_Scene.h"\
	"..\storm\include\IStorm3D_Terrain.h"\
	"..\storm\include\IStorm3D_Texture.h"\
	"..\storm\include\Storm3D_Common.h"\
	"..\storm\include\Storm3D_Datatypes.h"\
	"..\storm\include\Storm3D_ObstacleMapDefs.h"\
	"..\storm\include\storm3d_ui.h"\
	".\paramblock.h"\
	".\parseutil.h"\
	".\particlegravity.h"\
	".\particlesystem.h"\
	".\particletiming.h"\
	".\track.h"\
	{$(INCLUDE)}"boost\assert.hpp"\
	{$(INCLUDE)}"boost\checked_delete.hpp"\
	{$(INCLUDE)}"boost\config.hpp"\
	{$(INCLUDE)}"boost\config\posix_features.hpp"\
	{$(INCLUDE)}"boost\config\select_compiler_config.hpp"\
	{$(INCLUDE)}"boost\config\select_platform_config.hpp"\
	{$(INCLUDE)}"boost\config\select_stdlib_config.hpp"\
	{$(INCLUDE)}"boost\config\suffix.hpp"\
	{$(INCLUDE)}"boost\current_function.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_linux.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lightweight_mutex.hpp"\
	{$(INCLUDE)}"boost\detail\limits.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_irix.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_linux.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_nop.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32_cs.hpp"\
	{$(INCLUDE)}"boost\detail\quick_allocator.hpp"\
	{$(INCLUDE)}"boost\detail\shared_count.hpp"\
	{$(INCLUDE)}"boost\detail\shared_ptr_nmt.hpp"\
	{$(INCLUDE)}"boost\detail\workaround.hpp"\
	{$(INCLUDE)}"boost\lexical_cast.hpp"\
	{$(INCLUDE)}"boost\limits.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\algorithm_namespace.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\dtp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\eti.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\lambda.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\msvc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\nttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\overload_resolution.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\preprocessor.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\static_constant.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\ice_cast.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\integral_wrapper.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_arity_param.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_support.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\def_params_tail.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\filter_params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\sub.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\tuple.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\template_arity_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\value_wknd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\void_spec.hpp"\
	{$(INCLUDE)}"boost\mpl\bool.hpp"\
	{$(INCLUDE)}"boost\mpl\bool_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\if.hpp"\
	{$(INCLUDE)}"boost\mpl\int.hpp"\
	{$(INCLUDE)}"boost\mpl\int_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\lambda_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\limits\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\void.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\add.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\sub.hpp"\
	{$(INCLUDE)}"boost\preprocessor\cat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\comma_if.hpp"\
	{$(INCLUDE)}"boost\preprocessor\config\config.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\edg\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\msvc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\iif.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\debug\error.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\check.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\is_binary.hpp"\
	{$(INCLUDE)}"boost\preprocessor\empty.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum_params.hpp"\
	{$(INCLUDE)}"boost\preprocessor\identity.hpp"\
	{$(INCLUDE)}"boost\preprocessor\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\iterate.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\adt.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\for_each_i.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\reverse.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\and.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bitand.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bool.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\compl.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repeat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\edg\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\msvc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\eat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\elem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\rem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\to_list.hpp"\
	{$(INCLUDE)}"boost\scoped_ptr.hpp"\
	{$(INCLUDE)}"boost\shared_ptr.hpp"\
	{$(INCLUDE)}"boost\static_assert.hpp"\
	{$(INCLUDE)}"boost\throw_exception.hpp"\
	{$(INCLUDE)}"boost\type_traits\add_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\alignment_of.hpp"\
	{$(INCLUDE)}"boost\type_traits\broken_compiler_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\config.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\cv_traits_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\false_result.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_and.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_eq.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_not.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_or.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_helper.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_type_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\template_arity_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\wrap.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\yes_no_type.hpp"\
	{$(INCLUDE)}"boost\type_traits\ice.hpp"\
	{$(INCLUDE)}"boost\type_traits\intrinsics.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_arithmetic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_array.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_class.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_convertible.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_enum.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_float.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_function.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_integral.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_function_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pod.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_same.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_scalar.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_union.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_void.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\type_with_alignment.hpp"\
	{$(INCLUDE)}"config\_epilog.h"\
	{$(INCLUDE)}"config\_msvc_warnings_off.h"\
	{$(INCLUDE)}"config\_prolog.h"\
	{$(INCLUDE)}"config\stl_apcc.h"\
	{$(INCLUDE)}"config\stl_apple.h"\
	{$(INCLUDE)}"config\stl_as400.h"\
	{$(INCLUDE)}"config\stl_bc.h"\
	{$(INCLUDE)}"config\stl_como.h"\
	{$(INCLUDE)}"config\stl_confix.h"\
	{$(INCLUDE)}"config\stl_dec.h"\
	{$(INCLUDE)}"config\stl_dec_vms.h"\
	{$(INCLUDE)}"config\stl_fujitsu.h"\
	{$(INCLUDE)}"config\stl_gcc.h"\
	{$(INCLUDE)}"config\stl_hpacc.h"\
	{$(INCLUDE)}"config\stl_ibm.h"\
	{$(INCLUDE)}"config\stl_intel.h"\
	{$(INCLUDE)}"config\stl_kai.h"\
	{$(INCLUDE)}"config\stl_msvc.h"\
	{$(INCLUDE)}"config\stl_mwerks.h"\
	{$(INCLUDE)}"config\stl_mycomp.h"\
	{$(INCLUDE)}"config\stl_sco.h"\
	{$(INCLUDE)}"config\stl_select_lib.h"\
	{$(INCLUDE)}"config\stl_sgi.h"\
	{$(INCLUDE)}"config\stl_solaris.h"\
	{$(INCLUDE)}"config\stl_sunpro.h"\
	{$(INCLUDE)}"config\stl_symantec.h"\
	{$(INCLUDE)}"config\stl_watcom.h"\
	{$(INCLUDE)}"config\stl_wince.h"\
	{$(INCLUDE)}"config\stlcomp.h"\
	{$(INCLUDE)}"config\vc_select_lib.h"\
	{$(INCLUDE)}"pthread.h"\
	{$(INCLUDE)}"stl\_abbrevs.h"\
	{$(INCLUDE)}"stl\_config.h"\
	{$(INCLUDE)}"stl\_config_compat.h"\
	{$(INCLUDE)}"stl\_config_compat_post.h"\
	{$(INCLUDE)}"stl\_epilog.h"\
	{$(INCLUDE)}"stl\_prolog.h"\
	{$(INCLUDE)}"stl\_site_config.h"\
	{$(INCLUDE)}"stl_user_config.h"\
	
NODEP_CPP_PARTIC=\
	"..\..\..\..\usr\include\pthread.h"\
	
# End Source File
# Begin Source File

SOURCE=.\particlesystem.cpp
DEP_CPP_PARTICL=\
	"..\editor\parser.h"\
	"..\editor\string_conversions.h"\
	"..\storm\include\c2_color.h"\
	"..\storm\include\c2_common.h"\
	"..\storm\include\c2_matrix.h"\
	"..\storm\include\c2_plane.h"\
	"..\storm\include\c2_ptrlist.h"\
	"..\storm\include\c2_quat.h"\
	"..\storm\include\c2_rect.h"\
	"..\storm\include\c2_sptr.h"\
	"..\storm\include\c2_sptrlist.h"\
	"..\storm\include\c2_string.h"\
	"..\storm\include\c2_ui.h"\
	"..\storm\include\c2_vectors.h"\
	"..\storm\include\DatatypeDef.h"\
	"..\storm\include\IStorm3D.h"\
	"..\storm\include\IStorm3D_Font.h"\
	"..\storm\include\IStorm3D_Helper.h"\
	"..\storm\include\IStorm3D_Light.h"\
	"..\storm\include\IStorm3D_Line.h"\
	"..\storm\include\IStorm3D_Material.h"\
	"..\storm\include\IStorm3D_Mesh.h"\
	"..\storm\include\IStorm3D_Model.h"\
	"..\storm\include\IStorm3D_Particle.h"\
	"..\storm\include\IStorm3D_Scene.h"\
	"..\storm\include\IStorm3D_Terrain.h"\
	"..\storm\include\IStorm3D_Texture.h"\
	"..\storm\include\Storm3D_Common.h"\
	"..\storm\include\Storm3D_Datatypes.h"\
	"..\storm\include\Storm3D_ObstacleMapDefs.h"\
	"..\storm\include\storm3d_ui.h"\
	".\paramblock.h"\
	".\parseutil.h"\
	".\particlesystem.h"\
	".\particlesystemmanager.h"\
	".\particletiming.h"\
	".\track.h"\
	{$(INCLUDE)}"boost\assert.hpp"\
	{$(INCLUDE)}"boost\checked_delete.hpp"\
	{$(INCLUDE)}"boost\config.hpp"\
	{$(INCLUDE)}"boost\config\posix_features.hpp"\
	{$(INCLUDE)}"boost\config\select_compiler_config.hpp"\
	{$(INCLUDE)}"boost\config\select_platform_config.hpp"\
	{$(INCLUDE)}"boost\config\select_stdlib_config.hpp"\
	{$(INCLUDE)}"boost\config\suffix.hpp"\
	{$(INCLUDE)}"boost\current_function.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_linux.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lightweight_mutex.hpp"\
	{$(INCLUDE)}"boost\detail\limits.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_irix.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_linux.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_nop.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32_cs.hpp"\
	{$(INCLUDE)}"boost\detail\quick_allocator.hpp"\
	{$(INCLUDE)}"boost\detail\shared_count.hpp"\
	{$(INCLUDE)}"boost\detail\shared_ptr_nmt.hpp"\
	{$(INCLUDE)}"boost\detail\workaround.hpp"\
	{$(INCLUDE)}"boost\lexical_cast.hpp"\
	{$(INCLUDE)}"boost\limits.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\algorithm_namespace.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\dtp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\eti.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\lambda.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\msvc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\nttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\overload_resolution.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\preprocessor.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\static_constant.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\ice_cast.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\integral_wrapper.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_arity_param.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_support.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\def_params_tail.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\filter_params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\sub.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\tuple.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\template_arity_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\value_wknd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\void_spec.hpp"\
	{$(INCLUDE)}"boost\mpl\bool.hpp"\
	{$(INCLUDE)}"boost\mpl\bool_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\if.hpp"\
	{$(INCLUDE)}"boost\mpl\int.hpp"\
	{$(INCLUDE)}"boost\mpl\int_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\lambda_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\limits\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\void.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\add.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\sub.hpp"\
	{$(INCLUDE)}"boost\preprocessor\cat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\comma_if.hpp"\
	{$(INCLUDE)}"boost\preprocessor\config\config.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\edg\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\msvc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\iif.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\debug\error.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\check.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\is_binary.hpp"\
	{$(INCLUDE)}"boost\preprocessor\empty.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum_params.hpp"\
	{$(INCLUDE)}"boost\preprocessor\identity.hpp"\
	{$(INCLUDE)}"boost\preprocessor\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\iterate.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\adt.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\for_each_i.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\reverse.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\and.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bitand.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bool.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\compl.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repeat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\edg\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\msvc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\eat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\elem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\rem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\to_list.hpp"\
	{$(INCLUDE)}"boost\scoped_ptr.hpp"\
	{$(INCLUDE)}"boost\shared_ptr.hpp"\
	{$(INCLUDE)}"boost\static_assert.hpp"\
	{$(INCLUDE)}"boost\throw_exception.hpp"\
	{$(INCLUDE)}"boost\type_traits\add_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\alignment_of.hpp"\
	{$(INCLUDE)}"boost\type_traits\broken_compiler_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\config.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\cv_traits_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\false_result.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_and.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_eq.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_not.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_or.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_helper.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_type_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\template_arity_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\wrap.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\yes_no_type.hpp"\
	{$(INCLUDE)}"boost\type_traits\ice.hpp"\
	{$(INCLUDE)}"boost\type_traits\intrinsics.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_arithmetic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_array.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_class.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_convertible.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_enum.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_float.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_function.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_integral.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_function_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pod.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_same.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_scalar.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_union.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_void.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\type_with_alignment.hpp"\
	{$(INCLUDE)}"config\_epilog.h"\
	{$(INCLUDE)}"config\_msvc_warnings_off.h"\
	{$(INCLUDE)}"config\_prolog.h"\
	{$(INCLUDE)}"config\stl_apcc.h"\
	{$(INCLUDE)}"config\stl_apple.h"\
	{$(INCLUDE)}"config\stl_as400.h"\
	{$(INCLUDE)}"config\stl_bc.h"\
	{$(INCLUDE)}"config\stl_como.h"\
	{$(INCLUDE)}"config\stl_confix.h"\
	{$(INCLUDE)}"config\stl_dec.h"\
	{$(INCLUDE)}"config\stl_dec_vms.h"\
	{$(INCLUDE)}"config\stl_fujitsu.h"\
	{$(INCLUDE)}"config\stl_gcc.h"\
	{$(INCLUDE)}"config\stl_hpacc.h"\
	{$(INCLUDE)}"config\stl_ibm.h"\
	{$(INCLUDE)}"config\stl_intel.h"\
	{$(INCLUDE)}"config\stl_kai.h"\
	{$(INCLUDE)}"config\stl_msvc.h"\
	{$(INCLUDE)}"config\stl_mwerks.h"\
	{$(INCLUDE)}"config\stl_mycomp.h"\
	{$(INCLUDE)}"config\stl_sco.h"\
	{$(INCLUDE)}"config\stl_select_lib.h"\
	{$(INCLUDE)}"config\stl_sgi.h"\
	{$(INCLUDE)}"config\stl_solaris.h"\
	{$(INCLUDE)}"config\stl_sunpro.h"\
	{$(INCLUDE)}"config\stl_symantec.h"\
	{$(INCLUDE)}"config\stl_watcom.h"\
	{$(INCLUDE)}"config\stl_wince.h"\
	{$(INCLUDE)}"config\stlcomp.h"\
	{$(INCLUDE)}"config\vc_select_lib.h"\
	{$(INCLUDE)}"pthread.h"\
	{$(INCLUDE)}"stl\_abbrevs.h"\
	{$(INCLUDE)}"stl\_config.h"\
	{$(INCLUDE)}"stl\_config_compat.h"\
	{$(INCLUDE)}"stl\_config_compat_post.h"\
	{$(INCLUDE)}"stl\_epilog.h"\
	{$(INCLUDE)}"stl\_prolog.h"\
	{$(INCLUDE)}"stl\_site_config.h"\
	{$(INCLUDE)}"stl_user_config.h"\
	
NODEP_CPP_PARTICL=\
	"..\..\..\..\usr\include\pthread.h"\
	
# End Source File
# Begin Source File

SOURCE=.\particlesystemmanager.cpp
DEP_CPP_PARTICLE=\
	"..\editor\parser.h"\
	"..\storm\include\c2_color.h"\
	"..\storm\include\c2_common.h"\
	"..\storm\include\c2_matrix.h"\
	"..\storm\include\c2_plane.h"\
	"..\storm\include\c2_ptrlist.h"\
	"..\storm\include\c2_quat.h"\
	"..\storm\include\c2_rect.h"\
	"..\storm\include\c2_sptr.h"\
	"..\storm\include\c2_sptrlist.h"\
	"..\storm\include\c2_string.h"\
	"..\storm\include\c2_ui.h"\
	"..\storm\include\c2_vectors.h"\
	"..\storm\include\DatatypeDef.h"\
	"..\storm\include\IStorm3D.h"\
	"..\storm\include\IStorm3D_Font.h"\
	"..\storm\include\IStorm3D_Helper.h"\
	"..\storm\include\IStorm3D_Light.h"\
	"..\storm\include\IStorm3D_Line.h"\
	"..\storm\include\IStorm3D_Material.h"\
	"..\storm\include\IStorm3D_Mesh.h"\
	"..\storm\include\IStorm3D_Model.h"\
	"..\storm\include\IStorm3D_Particle.h"\
	"..\storm\include\IStorm3D_Scene.h"\
	"..\storm\include\IStorm3D_Terrain.h"\
	"..\storm\include\IStorm3D_Texture.h"\
	"..\storm\include\Storm3D_Common.h"\
	"..\storm\include\Storm3D_Datatypes.h"\
	"..\storm\include\Storm3D_ObstacleMapDefs.h"\
	"..\storm\include\storm3d_ui.h"\
	".\paramblock.h"\
	".\parseutil.h"\
	".\particlesystem.h"\
	".\particlesystemmanager.h"\
	".\track.h"\
	{$(INCLUDE)}"boost\assert.hpp"\
	{$(INCLUDE)}"boost\checked_delete.hpp"\
	{$(INCLUDE)}"boost\config.hpp"\
	{$(INCLUDE)}"boost\config\posix_features.hpp"\
	{$(INCLUDE)}"boost\config\select_compiler_config.hpp"\
	{$(INCLUDE)}"boost\config\select_platform_config.hpp"\
	{$(INCLUDE)}"boost\config\select_stdlib_config.hpp"\
	{$(INCLUDE)}"boost\config\suffix.hpp"\
	{$(INCLUDE)}"boost\current_function.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_linux.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lightweight_mutex.hpp"\
	{$(INCLUDE)}"boost\detail\limits.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_irix.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_linux.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_nop.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32_cs.hpp"\
	{$(INCLUDE)}"boost\detail\quick_allocator.hpp"\
	{$(INCLUDE)}"boost\detail\shared_count.hpp"\
	{$(INCLUDE)}"boost\detail\shared_ptr_nmt.hpp"\
	{$(INCLUDE)}"boost\detail\workaround.hpp"\
	{$(INCLUDE)}"boost\lexical_cast.hpp"\
	{$(INCLUDE)}"boost\limits.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\algorithm_namespace.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\dtp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\eti.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\lambda.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\msvc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\nttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\overload_resolution.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\preprocessor.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\static_constant.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\ice_cast.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\integral_wrapper.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_arity_param.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_support.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\def_params_tail.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\filter_params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\sub.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\tuple.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\template_arity_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\value_wknd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\void_spec.hpp"\
	{$(INCLUDE)}"boost\mpl\bool.hpp"\
	{$(INCLUDE)}"boost\mpl\bool_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\if.hpp"\
	{$(INCLUDE)}"boost\mpl\int.hpp"\
	{$(INCLUDE)}"boost\mpl\int_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\lambda_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\limits\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\void.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\add.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\sub.hpp"\
	{$(INCLUDE)}"boost\preprocessor\cat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\comma_if.hpp"\
	{$(INCLUDE)}"boost\preprocessor\config\config.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\edg\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\msvc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\iif.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\debug\error.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\check.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\is_binary.hpp"\
	{$(INCLUDE)}"boost\preprocessor\empty.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum_params.hpp"\
	{$(INCLUDE)}"boost\preprocessor\identity.hpp"\
	{$(INCLUDE)}"boost\preprocessor\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\iterate.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\adt.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\for_each_i.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\reverse.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\and.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bitand.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bool.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\compl.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repeat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\edg\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\msvc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\eat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\elem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\rem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\to_list.hpp"\
	{$(INCLUDE)}"boost\scoped_ptr.hpp"\
	{$(INCLUDE)}"boost\shared_ptr.hpp"\
	{$(INCLUDE)}"boost\static_assert.hpp"\
	{$(INCLUDE)}"boost\throw_exception.hpp"\
	{$(INCLUDE)}"boost\type_traits\add_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\alignment_of.hpp"\
	{$(INCLUDE)}"boost\type_traits\broken_compiler_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\config.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\cv_traits_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\false_result.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_and.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_eq.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_not.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_or.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_helper.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_type_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\template_arity_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\wrap.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\yes_no_type.hpp"\
	{$(INCLUDE)}"boost\type_traits\ice.hpp"\
	{$(INCLUDE)}"boost\type_traits\intrinsics.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_arithmetic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_array.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_class.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_convertible.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_enum.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_float.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_function.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_integral.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_function_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pod.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_same.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_scalar.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_union.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_void.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\type_with_alignment.hpp"\
	{$(INCLUDE)}"config\_epilog.h"\
	{$(INCLUDE)}"config\_msvc_warnings_off.h"\
	{$(INCLUDE)}"config\_prolog.h"\
	{$(INCLUDE)}"config\stl_apcc.h"\
	{$(INCLUDE)}"config\stl_apple.h"\
	{$(INCLUDE)}"config\stl_as400.h"\
	{$(INCLUDE)}"config\stl_bc.h"\
	{$(INCLUDE)}"config\stl_como.h"\
	{$(INCLUDE)}"config\stl_confix.h"\
	{$(INCLUDE)}"config\stl_dec.h"\
	{$(INCLUDE)}"config\stl_dec_vms.h"\
	{$(INCLUDE)}"config\stl_fujitsu.h"\
	{$(INCLUDE)}"config\stl_gcc.h"\
	{$(INCLUDE)}"config\stl_hpacc.h"\
	{$(INCLUDE)}"config\stl_ibm.h"\
	{$(INCLUDE)}"config\stl_intel.h"\
	{$(INCLUDE)}"config\stl_kai.h"\
	{$(INCLUDE)}"config\stl_msvc.h"\
	{$(INCLUDE)}"config\stl_mwerks.h"\
	{$(INCLUDE)}"config\stl_mycomp.h"\
	{$(INCLUDE)}"config\stl_sco.h"\
	{$(INCLUDE)}"config\stl_select_lib.h"\
	{$(INCLUDE)}"config\stl_sgi.h"\
	{$(INCLUDE)}"config\stl_solaris.h"\
	{$(INCLUDE)}"config\stl_sunpro.h"\
	{$(INCLUDE)}"config\stl_symantec.h"\
	{$(INCLUDE)}"config\stl_watcom.h"\
	{$(INCLUDE)}"config\stl_wince.h"\
	{$(INCLUDE)}"config\stlcomp.h"\
	{$(INCLUDE)}"config\vc_select_lib.h"\
	{$(INCLUDE)}"pthread.h"\
	{$(INCLUDE)}"stl\_abbrevs.h"\
	{$(INCLUDE)}"stl\_config.h"\
	{$(INCLUDE)}"stl\_config_compat.h"\
	{$(INCLUDE)}"stl\_config_compat_post.h"\
	{$(INCLUDE)}"stl\_epilog.h"\
	{$(INCLUDE)}"stl\_prolog.h"\
	{$(INCLUDE)}"stl\_site_config.h"\
	{$(INCLUDE)}"stl_user_config.h"\
	
NODEP_CPP_PARTICLE=\
	"..\..\..\..\usr\include\pthread.h"\
	
# End Source File
# Begin Source File

SOURCE=.\pointarrayparticlesystem.cpp
DEP_CPP_POINT=\
	"..\editor\parser.h"\
	"..\editor\string_conversions.h"\
	"..\storm\include\c2_color.h"\
	"..\storm\include\c2_common.h"\
	"..\storm\include\c2_matrix.h"\
	"..\storm\include\c2_plane.h"\
	"..\storm\include\c2_ptrlist.h"\
	"..\storm\include\c2_quat.h"\
	"..\storm\include\c2_rect.h"\
	"..\storm\include\c2_sptr.h"\
	"..\storm\include\c2_sptrlist.h"\
	"..\storm\include\c2_string.h"\
	"..\storm\include\c2_ui.h"\
	"..\storm\include\c2_vectors.h"\
	"..\storm\include\DatatypeDef.h"\
	"..\storm\include\IStorm3D.h"\
	"..\storm\include\IStorm3D_Font.h"\
	"..\storm\include\IStorm3D_Helper.h"\
	"..\storm\include\IStorm3D_Light.h"\
	"..\storm\include\IStorm3D_Line.h"\
	"..\storm\include\IStorm3D_Material.h"\
	"..\storm\include\IStorm3D_Mesh.h"\
	"..\storm\include\IStorm3D_Model.h"\
	"..\storm\include\IStorm3D_Particle.h"\
	"..\storm\include\IStorm3D_Scene.h"\
	"..\storm\include\IStorm3D_Terrain.h"\
	"..\storm\include\IStorm3D_Texture.h"\
	"..\storm\include\Storm3D_Common.h"\
	"..\storm\include\Storm3D_Datatypes.h"\
	"..\storm\include\Storm3D_ObstacleMapDefs.h"\
	"..\storm\include\storm3d_ui.h"\
	".\paramblock.h"\
	".\parseutil.h"\
	".\particleeffect.h"\
	".\particlesystem.h"\
	".\particlesystemmanager.h"\
	".\pointarrayparticlesystem.h"\
	".\track.h"\
	{$(INCLUDE)}"boost\assert.hpp"\
	{$(INCLUDE)}"boost\checked_delete.hpp"\
	{$(INCLUDE)}"boost\config.hpp"\
	{$(INCLUDE)}"boost\config\posix_features.hpp"\
	{$(INCLUDE)}"boost\config\select_compiler_config.hpp"\
	{$(INCLUDE)}"boost\config\select_platform_config.hpp"\
	{$(INCLUDE)}"boost\config\select_stdlib_config.hpp"\
	{$(INCLUDE)}"boost\config\suffix.hpp"\
	{$(INCLUDE)}"boost\current_function.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_linux.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lightweight_mutex.hpp"\
	{$(INCLUDE)}"boost\detail\limits.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_irix.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_linux.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_nop.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32_cs.hpp"\
	{$(INCLUDE)}"boost\detail\quick_allocator.hpp"\
	{$(INCLUDE)}"boost\detail\shared_count.hpp"\
	{$(INCLUDE)}"boost\detail\shared_ptr_nmt.hpp"\
	{$(INCLUDE)}"boost\detail\workaround.hpp"\
	{$(INCLUDE)}"boost\lexical_cast.hpp"\
	{$(INCLUDE)}"boost\limits.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\algorithm_namespace.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\dtp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\eti.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\lambda.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\msvc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\nttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\overload_resolution.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\preprocessor.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\static_constant.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\ice_cast.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\integral_wrapper.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_arity_param.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_support.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\def_params_tail.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\filter_params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\sub.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\tuple.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\template_arity_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\value_wknd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\void_spec.hpp"\
	{$(INCLUDE)}"boost\mpl\bool.hpp"\
	{$(INCLUDE)}"boost\mpl\bool_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\if.hpp"\
	{$(INCLUDE)}"boost\mpl\int.hpp"\
	{$(INCLUDE)}"boost\mpl\int_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\lambda_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\limits\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\void.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\add.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\sub.hpp"\
	{$(INCLUDE)}"boost\preprocessor\cat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\comma_if.hpp"\
	{$(INCLUDE)}"boost\preprocessor\config\config.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\edg\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\msvc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\iif.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\debug\error.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\check.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\is_binary.hpp"\
	{$(INCLUDE)}"boost\preprocessor\empty.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum_params.hpp"\
	{$(INCLUDE)}"boost\preprocessor\identity.hpp"\
	{$(INCLUDE)}"boost\preprocessor\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\iterate.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\adt.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\for_each_i.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\reverse.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\and.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bitand.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bool.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\compl.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repeat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\edg\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\msvc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\eat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\elem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\rem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\to_list.hpp"\
	{$(INCLUDE)}"boost\scoped_ptr.hpp"\
	{$(INCLUDE)}"boost\shared_ptr.hpp"\
	{$(INCLUDE)}"boost\static_assert.hpp"\
	{$(INCLUDE)}"boost\throw_exception.hpp"\
	{$(INCLUDE)}"boost\type_traits\add_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\alignment_of.hpp"\
	{$(INCLUDE)}"boost\type_traits\broken_compiler_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\config.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\cv_traits_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\false_result.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_and.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_eq.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_not.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_or.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_helper.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_type_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\template_arity_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\wrap.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\yes_no_type.hpp"\
	{$(INCLUDE)}"boost\type_traits\ice.hpp"\
	{$(INCLUDE)}"boost\type_traits\intrinsics.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_arithmetic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_array.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_class.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_convertible.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_enum.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_float.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_function.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_integral.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_function_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pod.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_same.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_scalar.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_union.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_void.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\type_with_alignment.hpp"\
	{$(INCLUDE)}"config\_epilog.h"\
	{$(INCLUDE)}"config\_msvc_warnings_off.h"\
	{$(INCLUDE)}"config\_prolog.h"\
	{$(INCLUDE)}"config\stl_apcc.h"\
	{$(INCLUDE)}"config\stl_apple.h"\
	{$(INCLUDE)}"config\stl_as400.h"\
	{$(INCLUDE)}"config\stl_bc.h"\
	{$(INCLUDE)}"config\stl_como.h"\
	{$(INCLUDE)}"config\stl_confix.h"\
	{$(INCLUDE)}"config\stl_dec.h"\
	{$(INCLUDE)}"config\stl_dec_vms.h"\
	{$(INCLUDE)}"config\stl_fujitsu.h"\
	{$(INCLUDE)}"config\stl_gcc.h"\
	{$(INCLUDE)}"config\stl_hpacc.h"\
	{$(INCLUDE)}"config\stl_ibm.h"\
	{$(INCLUDE)}"config\stl_intel.h"\
	{$(INCLUDE)}"config\stl_kai.h"\
	{$(INCLUDE)}"config\stl_msvc.h"\
	{$(INCLUDE)}"config\stl_mwerks.h"\
	{$(INCLUDE)}"config\stl_mycomp.h"\
	{$(INCLUDE)}"config\stl_sco.h"\
	{$(INCLUDE)}"config\stl_select_lib.h"\
	{$(INCLUDE)}"config\stl_sgi.h"\
	{$(INCLUDE)}"config\stl_solaris.h"\
	{$(INCLUDE)}"config\stl_sunpro.h"\
	{$(INCLUDE)}"config\stl_symantec.h"\
	{$(INCLUDE)}"config\stl_watcom.h"\
	{$(INCLUDE)}"config\stl_wince.h"\
	{$(INCLUDE)}"config\stlcomp.h"\
	{$(INCLUDE)}"config\vc_select_lib.h"\
	{$(INCLUDE)}"pthread.h"\
	{$(INCLUDE)}"stl\_abbrevs.h"\
	{$(INCLUDE)}"stl\_config.h"\
	{$(INCLUDE)}"stl\_config_compat.h"\
	{$(INCLUDE)}"stl\_config_compat_post.h"\
	{$(INCLUDE)}"stl\_epilog.h"\
	{$(INCLUDE)}"stl\_prolog.h"\
	{$(INCLUDE)}"stl\_site_config.h"\
	{$(INCLUDE)}"stl_user_config.h"\
	
NODEP_CPP_POINT=\
	"..\..\..\..\usr\include\pthread.h"\
	
# End Source File
# Begin Source File

SOURCE=.\sprayparticlesystem.cpp
DEP_CPP_SPRAY=\
	"..\editor\parser.h"\
	"..\editor\string_conversions.h"\
	"..\storm\include\c2_color.h"\
	"..\storm\include\c2_common.h"\
	"..\storm\include\c2_matrix.h"\
	"..\storm\include\c2_plane.h"\
	"..\storm\include\c2_ptrlist.h"\
	"..\storm\include\c2_quat.h"\
	"..\storm\include\c2_rect.h"\
	"..\storm\include\c2_sptr.h"\
	"..\storm\include\c2_sptrlist.h"\
	"..\storm\include\c2_string.h"\
	"..\storm\include\c2_ui.h"\
	"..\storm\include\c2_vectors.h"\
	"..\storm\include\DatatypeDef.h"\
	"..\storm\include\IStorm3D.h"\
	"..\storm\include\IStorm3D_Font.h"\
	"..\storm\include\IStorm3D_Helper.h"\
	"..\storm\include\IStorm3D_Light.h"\
	"..\storm\include\IStorm3D_Line.h"\
	"..\storm\include\IStorm3D_Material.h"\
	"..\storm\include\IStorm3D_Mesh.h"\
	"..\storm\include\IStorm3D_Model.h"\
	"..\storm\include\IStorm3D_Particle.h"\
	"..\storm\include\IStorm3D_Scene.h"\
	"..\storm\include\IStorm3D_Terrain.h"\
	"..\storm\include\IStorm3D_Texture.h"\
	"..\storm\include\Storm3D_Common.h"\
	"..\storm\include\Storm3D_Datatypes.h"\
	"..\storm\include\Storm3D_ObstacleMapDefs.h"\
	"..\storm\include\storm3d_ui.h"\
	".\paramblock.h"\
	".\parseutil.h"\
	".\particleeffect.h"\
	".\particlesystem.h"\
	".\particlesystemmanager.h"\
	".\sprayparticlesystem.h"\
	".\track.h"\
	{$(INCLUDE)}"boost\assert.hpp"\
	{$(INCLUDE)}"boost\checked_delete.hpp"\
	{$(INCLUDE)}"boost\config.hpp"\
	{$(INCLUDE)}"boost\config\posix_features.hpp"\
	{$(INCLUDE)}"boost\config\select_compiler_config.hpp"\
	{$(INCLUDE)}"boost\config\select_platform_config.hpp"\
	{$(INCLUDE)}"boost\config\select_stdlib_config.hpp"\
	{$(INCLUDE)}"boost\config\suffix.hpp"\
	{$(INCLUDE)}"boost\current_function.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_linux.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lightweight_mutex.hpp"\
	{$(INCLUDE)}"boost\detail\limits.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_irix.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_linux.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_nop.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32_cs.hpp"\
	{$(INCLUDE)}"boost\detail\quick_allocator.hpp"\
	{$(INCLUDE)}"boost\detail\shared_count.hpp"\
	{$(INCLUDE)}"boost\detail\shared_ptr_nmt.hpp"\
	{$(INCLUDE)}"boost\detail\workaround.hpp"\
	{$(INCLUDE)}"boost\lexical_cast.hpp"\
	{$(INCLUDE)}"boost\limits.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\algorithm_namespace.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\dtp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\eti.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\lambda.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\msvc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\nttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\overload_resolution.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\preprocessor.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\static_constant.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\ice_cast.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\integral_wrapper.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_arity_param.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_support.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\def_params_tail.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\filter_params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\sub.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\tuple.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\template_arity_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\value_wknd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\void_spec.hpp"\
	{$(INCLUDE)}"boost\mpl\bool.hpp"\
	{$(INCLUDE)}"boost\mpl\bool_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\if.hpp"\
	{$(INCLUDE)}"boost\mpl\int.hpp"\
	{$(INCLUDE)}"boost\mpl\int_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\lambda_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\limits\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\void.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\add.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\sub.hpp"\
	{$(INCLUDE)}"boost\preprocessor\cat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\comma_if.hpp"\
	{$(INCLUDE)}"boost\preprocessor\config\config.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\edg\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\msvc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\iif.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\debug\error.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\check.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\is_binary.hpp"\
	{$(INCLUDE)}"boost\preprocessor\empty.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum_params.hpp"\
	{$(INCLUDE)}"boost\preprocessor\identity.hpp"\
	{$(INCLUDE)}"boost\preprocessor\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\iterate.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\adt.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\for_each_i.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\reverse.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\and.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bitand.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bool.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\compl.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repeat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\edg\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\msvc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\eat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\elem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\rem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\to_list.hpp"\
	{$(INCLUDE)}"boost\scoped_ptr.hpp"\
	{$(INCLUDE)}"boost\shared_ptr.hpp"\
	{$(INCLUDE)}"boost\static_assert.hpp"\
	{$(INCLUDE)}"boost\throw_exception.hpp"\
	{$(INCLUDE)}"boost\type_traits\add_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\alignment_of.hpp"\
	{$(INCLUDE)}"boost\type_traits\broken_compiler_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\config.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\cv_traits_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\false_result.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_and.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_eq.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_not.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_or.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_helper.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_type_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\template_arity_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\wrap.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\yes_no_type.hpp"\
	{$(INCLUDE)}"boost\type_traits\ice.hpp"\
	{$(INCLUDE)}"boost\type_traits\intrinsics.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_arithmetic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_array.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_class.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_convertible.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_enum.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_float.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_function.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_integral.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_function_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pod.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_same.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_scalar.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_union.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_void.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\type_with_alignment.hpp"\
	{$(INCLUDE)}"config\_epilog.h"\
	{$(INCLUDE)}"config\_msvc_warnings_off.h"\
	{$(INCLUDE)}"config\_prolog.h"\
	{$(INCLUDE)}"config\stl_apcc.h"\
	{$(INCLUDE)}"config\stl_apple.h"\
	{$(INCLUDE)}"config\stl_as400.h"\
	{$(INCLUDE)}"config\stl_bc.h"\
	{$(INCLUDE)}"config\stl_como.h"\
	{$(INCLUDE)}"config\stl_confix.h"\
	{$(INCLUDE)}"config\stl_dec.h"\
	{$(INCLUDE)}"config\stl_dec_vms.h"\
	{$(INCLUDE)}"config\stl_fujitsu.h"\
	{$(INCLUDE)}"config\stl_gcc.h"\
	{$(INCLUDE)}"config\stl_hpacc.h"\
	{$(INCLUDE)}"config\stl_ibm.h"\
	{$(INCLUDE)}"config\stl_intel.h"\
	{$(INCLUDE)}"config\stl_kai.h"\
	{$(INCLUDE)}"config\stl_msvc.h"\
	{$(INCLUDE)}"config\stl_mwerks.h"\
	{$(INCLUDE)}"config\stl_mycomp.h"\
	{$(INCLUDE)}"config\stl_sco.h"\
	{$(INCLUDE)}"config\stl_select_lib.h"\
	{$(INCLUDE)}"config\stl_sgi.h"\
	{$(INCLUDE)}"config\stl_solaris.h"\
	{$(INCLUDE)}"config\stl_sunpro.h"\
	{$(INCLUDE)}"config\stl_symantec.h"\
	{$(INCLUDE)}"config\stl_watcom.h"\
	{$(INCLUDE)}"config\stl_wince.h"\
	{$(INCLUDE)}"config\stlcomp.h"\
	{$(INCLUDE)}"config\vc_select_lib.h"\
	{$(INCLUDE)}"pthread.h"\
	{$(INCLUDE)}"stl\_abbrevs.h"\
	{$(INCLUDE)}"stl\_config.h"\
	{$(INCLUDE)}"stl\_config_compat.h"\
	{$(INCLUDE)}"stl\_config_compat_post.h"\
	{$(INCLUDE)}"stl\_epilog.h"\
	{$(INCLUDE)}"stl\_prolog.h"\
	{$(INCLUDE)}"stl\_site_config.h"\
	{$(INCLUDE)}"stl_user_config.h"\
	
NODEP_CPP_SPRAY=\
	"..\..\..\..\usr\include\pthread.h"\
	
# End Source File
# Begin Source File

SOURCE=.\vectortrack.cpp
DEP_CPP_VECTO=\
	".\track.h"\
	
# End Source File
# End Group
# Begin Group "Header Files"

# PROP Default_Filter "h;hpp;hxx;hm;inl"
# Begin Source File

SOURCE=.\cloudparticlesystem.h
# End Source File
# Begin Source File

SOURCE=.\dragparticleforce.h
# End Source File
# Begin Source File

SOURCE=.\paramblock.h
# End Source File
# Begin Source File

SOURCE=.\parseutil.h
# End Source File
# Begin Source File

SOURCE=.\particle.h
# End Source File
# Begin Source File

SOURCE=.\particleeffect.h
# End Source File
# Begin Source File

SOURCE=.\particlegravity.h
# End Source File
# Begin Source File

SOURCE=.\particlesystem.h
# End Source File
# Begin Source File

SOURCE=.\particlesystemmanager.h
# End Source File
# Begin Source File

SOURCE=.\particletiming.h
# End Source File
# Begin Source File

SOURCE=.\pointarrayparticlesystem.h
# End Source File
# Begin Source File

SOURCE=.\sprayparticlesystem.h
# End Source File
# Begin Source File

SOURCE=.\track.h
# End Source File
# End Group
# Begin Group "Resource Files"

# PROP Default_Filter "ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe"
# End Group
# End Target
# End Project
